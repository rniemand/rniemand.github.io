---
title: "Home Assistant + ESP Easy + DHT11 = :)"
date: 2017-12-10
tags: [home assistant]
logo: hass.png
---

<p>Today I would like to look into an awesome project called <a href="https://www.letscontrolit.com/wiki/index.php/ESPEasy">ESPEasy</a> and how one may use it to publish temperature data collected via a <code>DHT11</code> or similar module.</p>
<p>As the name suggests <code>ESPEasy</code> aims to be a simple to use (and install) firmware to transform your ESP module into an easy multi-function sensor device for Home Automation solutions. Installation is straightforward and covered <a href="https://www.letscontrolit.com/wiki/index.php/Basics:_Connecting_and_flashing_the_ESP8266">in great detail here</a>.</p>
<p>For the rest of this post I am going to assume that you have successfully flashed your ESP with the latest build and have connected your device to your home network.</p>

<h2 id="configuration">Configuration</h2>
<p>The first thing you will need to do is connect your <code>DHT sensor</code> to your ESP similar to the diagram shown below, taking note of the pin used for the data signal (in the case below that is <code>D4</code>).</p>
<img src="./images/12/10-001.png" alt="" />
<p>Next, navigate to the devices screen and click the edit button on any free slot.</p>
<img src="./images/12/10-002.png" alt="" />
<p>On the screen that appears next you will need to make the following changes:</p>
<ul>
<li>Select the type of device you would like to configure (in our case this will be the DHT module)</li>
<li>Next you will need to name the device - this is the name that will appear on the MQTT feed generated by your ESP.</li>
<li>Select a delay of how often you would like the ESP to publish the collected information (this value is in seconds)</li>
<li>Select an ID for the device (this needs to be unique to all other configured devices on your ESP)</li>
<li>Using the diagram at the bottom of this post - select the GPIO that your DHT device is connected to.</li>
</ul>
<blockquote>
<p>If the IDX value is not set you ESP will not publish any data for the configured device (I learnt this the hard way).</p>
</blockquote>
<ul>
<li>Choose the decimals (optionally the formula for publishing the collected data).</li>
<li>Finally give the values a friendly name (this will form part of the topic when publishing over MQTT).</li>
</ul>
<img src="./images/12/10-003.png" alt="" />
<p>Click the submit button to save your changes, and if all went well you should start seeing the collected temperature data being displayed.</p>
<img src="./images/12/10-004.png" alt="" />

<h2 id="viewing-published-data">Viewing Published Data</h2>
<p>As mentioned above the values entered in when configuring your ESP and the DHT11 device are used to generate a unique MQTT Topic for publishing the collected temperature data.</p>
<p>You can use a tool like <a href="https://chrome.google.com/webstore/detail/mqttlens/hemojaaeigabkbcookmlgmdigohjobjm?hl=en">MQTTLens</a> to spy on your generated topic, or if you are unsure of what it maybe you can spy on the # global topic. After a while you should see some information being published from your device (mine is every 30 seconds according to my configuration).</p>
<img src="./images/12/10-005.png" alt="" />
<p>The published values are determined by the following formula <code>/%sysname%/%tskname%/%valname%</code>, so that becomes <code>/ESP03/dht/Temperature</code> and <code>/ESP03/dht/Humidity</code>. The formula can be configured globally on the ESP via the main configuration screen.</p>

<h2 id="hass-integration">HASS Integration</h2>
<p>The last thing I would like to do is to display the collected temperature and humidity information in Home Assistant (HASS) for easy viewing and historical graphing. To do this I will need to create a couple of MQTT sensors in HASS with the following configuration:</p>
{% highlight "yaml" %}
- platform: mqtt
  state_topic: "/ESP03/dht/Temperature"
  name: Temperature (Lounge)
  qos: 0
  unit_of_measurement: celsius

- platform: mqtt
  state_topic: "/ESP03/dht/Humidity"
  name: Humidity (Lounge)
  qos: 0
  unit_of_measurement: "%"
{% endhighlight %}
<p>After a quick reboot (or reload of the core configuration) I am able to see the published information easily on my home screen...</p>
<img src="./images/12/10-006.png" alt="" />
<p>... and after a while I can view all the collected data points over time.</p>
<img src="./images/12/10-007.png" alt="" />

<h2 id="diagrams">Diagrams</h2>
<p>The below diagram shows you the most common pin mapping of 90% of the ESP8266 boards when using the ESPEasy firmware.</p>
<img src="./images/12/10-008.png" alt="" />
