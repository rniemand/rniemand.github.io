---
title: OWIN - Mapping Attribute Routes (Web API 2)
date: 2016-08-26
tags: [.net]
logo: dotnet.png
---

<p>
	So last night I was playing around with OWIN and a small self-hosted application that made use of WebAPI 2. Everything was working fine until I tried to make use of the 
	<code>[RoutePrefix("")]</code> and <code>[Route("")]</code> decorators on my controller (they just were not mapping). After a bit of digging I found out that you need to 
	call <code>config.MapHttpAttributeRoutes()</code> in your OWIN <code>Startup</code> class and that should fix the mapping issue.
</p>

<p>
	My initial attempt at this failed, and after a bit of playing around I figured out that the order in which you place the <code>MapHttpAttributeRoutes</code> 
	and <code>MapHttpRoute</code> makes all the difference.
</p>

<p>If you are wanting to make use of attribute routing in your OWIN application, this seems to be the winning order:</p>

{% highlight "cs" %}
config.MapHttpAttributeRoutes();

config.Routes.MapHttpRoute(
    name: "DefaultApi",
    routeTemplate: "api/{controller}/{id}",
    defaults: new {id = RouteParameter.Optional}
);
{% endhighlight %}

<p>Hopefully this helps you</p>
